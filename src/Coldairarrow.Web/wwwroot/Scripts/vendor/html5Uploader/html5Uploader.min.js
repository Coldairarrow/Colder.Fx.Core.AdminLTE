(function (b) { b.extend(window, { "Html5Uploader": a }); function a(p, f) { var o = { imgs: [], enableScale: false, asyncUpload: false, uploadUrl: null, maxHeight: 800, maxWidth: 800, uploadLimit: 5, sizeLimit: 5, postData: null, type: "image" }; var q = ['<li class="up-pic">', '<div class="up-clip">', '<span data-src="" style="display:none"></span>', '<a href="" style="display:none"></a>', '<img src="" style="display:block;" />', "</div>", '<div class="up-mask"></div>', '<div class="up-progress">', '<div class="pos"></div>', "</div>", '<a class="up-del" href="javascript:void(0)" title="关闭">&nbsp;</a>', "</li>"].join(""); var t, i, e; var j, x = 0, m; function u() { f = b.extend({}, o, f); t = b(p).addClass("up-container"); if (!t.length) { return } i = t.find("ul.up-pics"); if (!i.length) { i = b('<ul class="up-pics"></ul>').appendTo(t) } var y = f.type == "image" ? "image/*" : "*/*"; e = b('<input type="file" class="up-file" accept="' + y + '" />').appendTo(t); if (f.uploadLimit > 1) { e.attr("multiple", "multiple") } e.wrap('<div class="up-entry"></div>').change(function () { if (!this.files || !this.files.length) { return } m = Math.random(); j = this.files; x = j.length; l(0) }); i.on("tap", "a.up-del", function () { b(this).closest("li.up-pic").remove(); k() }); i.on("click", "a.up-del", function () { b(this).closest("li.up-pic").remove(); k() }); k(); var A = []; if (f.imgs) { var z = getType(f.imgs); switch (z) { case "string": A = f.imgs.split(","); break; case "array": A = f.imgs; break; default: break } } A.forEach(function (B) { n(B) }) } function l(y) { if (y >= j.length) { e.val(""); return } g(j[y], function () { l(++y) }) } function g(z, A) { if (!z.type.match(/image.*/) && f.type == "image") { alert("只能选择图片文件."); x--; if (A) { A.call() } return } if (z.size > f.sizeLimit * 1024 * 1024) { alert("图片最大不能超过" + f.sizeLimit + "M."); x--; if (A) { A.call() } return } if (c()) { alert("最多只能上传" + f.uploadLimit + "个文件."); x = f.uploadLimit; if (A) { A.call() } return } var y = null; if (f.enableScale) { EXIF.getData(z, function () { EXIF.getAllTags(this); y = EXIF.getTag(this, "Orientation") }) } var B = z.name; var G = z.type.indexOf("image/") == -1 ? "file" : "image"; var C = b(q).appendTo(i); if (G == "file") { C.find("img").css("display", "none"); C.find("div a").css("display", "block") } function E() { var H = new FileReader(); H.onloadend = function () { if (H.error) { alert("文件获取失败！"); C.remove(); if (A) { A.call() } return } var I = H.result; if (G == "image") { C.find("img").attr({ "src": I, "onload": v }) } if (f.enableScale) { D(I) } else { F(I) } }; H.readAsDataURL(z) } function D(I) { var H = new Image(); H.onload = function () { var O = this.naturalWidth, K = this.naturalHeight; var M = document.createElement("canvas"); var J = M.getContext("2d"); M.width = O; M.height = K; J.drawImage(this, 0, 0, O, K); var L = null; if (navigator.userAgent.match(/iphone/i)) { if (y != "" && y != 1) { switch (y) { case 6: h(this, "right", M); break; case 8: h(this, "left", M); break; case 3: h(this, "left", M); h(this, "left", M); break } } L = M.toDataURL("image/jpeg", 0.9) } else { if (navigator.userAgent.match(/Android/i) && !true) { var N = new JPEGEncoder(); L = N.encode(J.getImageData(0, 0, expectWidth, expectHeight), 80) } else { if (y != "" && y != 1) { switch (y) { case 6: h(this, "right", M); break; case 8: h(this, "left", M); break; case 3: h(this, "left", M); h(this, "left", M); break } } L = M.toDataURL("image/jpeg", 0.9) } } F(L) }; H.src = I } function F(I) { if (f.asyncUpload && f.uploadUrl) { var H = b.extend(f.postData, { fileName: B, fileType: G, data: I, count: x, uploadVerNo: m }); b.post(f.uploadUrl, H, function (J) { if (!J.success) { alert(J.message); C.remove(); if (A) { A.call() } return } C.find("span").attr("data-src", J.src); if (G == "image") { C.find("img").attr({ "src": J.src, "onload": v }) } else { C.find("div a").attr("href", J.src); C.find("div a").text(B) } C.find(".pos").animate({ width: "100%" }, 0, "linear", function () { C.addClass("up-over"); k(); if (A) { A.call() } }) }, "json") } else { C.find("img").attr({ "src": I, "onload": v }); C.find(".pos").animate({ width: "100%" }, 500, "linear", function () { C.addClass("up-over"); k(); if (A) { A.call() } }) } } E() } function h(D, E, A) { if (D == null) { return } var y = 0, F = 3, B = 2, G = D.height, z = D.width; if (E == "left") { B++; B > F && (B = y) } else { B--; B < y && (B = F) } var C = B * 90 * Math.PI / 180; var H = A.getContext("2d"); switch (B) { case 0: A.width = z; A.height = G; H.drawImage(D, 0, 0, z, G); break; case 1: A.width = G; A.height = z; H.rotate(C); H.drawImage(D, 0, -G, z, G); break; case 2: A.width = z; A.height = G; H.rotate(C); H.drawImage(D, -z, -G, z, G); break; case 3: A.width = G; A.height = z; H.rotate(C); H.drawImage(D, -z, 0, z, G); break } } function v() { var A = this.parentNode; if (A) { var z = this.offsetHeight - A.offsetHeight; var y = this.offsetWidth - A.offsetWidth; 0 > z && (this.style.width = "auto", this.style.height = "100%"); 0 > y && (this.style.height = "auto", this.style.width = "100%") } } function k() { if (c()) { e.parent().hide() } else { e.parent().show() } } function c() { return f.uploadLimit > 0 && i.children().length >= f.uploadLimit } function s() { var y = []; i.find("span").each(function () { y.push(b(this).attr("data-src")) }); return y } function n(A) { var B = w(A); var y = d(B); var z = b(q).appendTo(i); z.addClass("up-over"); if (y == "image") { z.find("img").attr({ "src": A, "onload": v }) } else { z.find("img").css("display", "none"); z.find("div a").css("display", "block"); z.find("div a").attr("href", A); z.find("div a").text(B) } z.find("span").attr("data-src", A); k() } function r() { i.empty() } return u(), { "getUploadFiles": s, "insertItem": n, "clear": r }; function d(A) { var z = A.lastIndexOf("."); var y = A.substring(z + 1).toUpperCase(); if (y != "BMP" && y != "JPG" && y != "JPEG" && y != "PNG" && y != "GIF") { return "file" } else { return "image" } } function w(B) { var A = B; var y = A.split("?")[0]; var z = y.split("/"); return z[z.length - 1] } } })(jQuery);